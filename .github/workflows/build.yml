name: CI

on:
  push:
    branches: [ "main" ] # Triggers on pushes to the main branch
  pull_request:
    branches: [ "main" ] # Triggers on pull requests to the main branch
  workflow_dispatch: # Allows manual workflow execution

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run a one-line script
        run: echo Hello, world!

      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

  tag-on-merge:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/heads/main')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Get the latest tag
        id: get_latest_tag
        run: |
          latest_tag=$(git describe --tags $(git rev-list --tags --max-count=1))
          echo "Latest tag: $latest_tag"
          echo "tag=$latest_tag" >> $GITHUB_ENV

      - name: Generate new tag
        id: generate_tag
        run: |
          latest_tag=${{ env.tag }}
          if [[ -z "$latest_tag" ]]; then
            new_tag="v1.0.0"
          else
            IFS='.' read -r -a parts <<< "${latest_tag#v}"
            ((parts[2]++))
            new_tag="v${parts[0]}.${parts[1]}.${parts[2]}"
          fi
          echo "New tag: $new_tag"
          echo "new_tag=$new_tag" >> $GITHUB_ENV

      - name: Create and push tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git tag ${{ env.new_tag }}
          git push origin ${{ env.new_tag }}

  create-release-branch:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Create a release branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          release_branch="release-$(date +'%Y%m%d')"
          git checkout -b $release_branch
          git push origin $release_branch
          echo "Release branch $release_branch created and pushed."